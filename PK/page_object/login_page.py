from selenium.webdriver import Keys

import PK.parametrize as prm
import time
from BASE_PAGE import BasePage
from selenium.webdriver.common.by import By

class login_locators:
    LOCATOR_BODY = (By.XPATH, '//body')
    LOCATOR_USER = (By.XPATH, '//div[@name="DBLogin"]//input')
    LOCATOR_PASWD = (By.XPATH, '//div[@name="DBPassword"]//input')
    LOCATOR_ENTER = (By.XPATH, '//div[contains(text(), "–í–æ–π—Ç–∏")]')
    LOCATOR_LPU_1 = (By.XPATH, '//div[@class="cmbb-button"]')
    LOCATOR_LPU_2 = (By.XPATH, '//span[contains(text(), "250000 -")]')
    LOCATOR_LC_1 = (By.XPATH, '//div[@name="CABLAB"]/div[@class="cmbb-button"]')
    LOCATOR_LC_2 = (By.XPATH, '//span[contains(text(), "–∫–∞–±–∏–Ω–µ—Ç 2")]')
    LOCATOR_ENTERLPU = (By.XPATH, '//div[@name="Btn"]/div[contains(text(), "–í—ã–±–æ—Ä")]')

class login(BasePage):
    def auth(self):
        try:
            print('=================\n[–ü—Ä–∏–º–æ—Ä—Å–∫–∏–π –∫—Ä–∞–π]')
            print('üîΩ –ú–æ–¥—É–ª—å - "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è"')
            minimize = self.find_element(login_locators.LOCATOR_BODY)
            minimize.send_keys(Keys.CONTROL + Keys.SUBTRACT)
            user = self.find_element(login_locators.LOCATOR_USER) # –ª–æ–≥–∏–Ω
            user.send_keys(prm.login) # –≤–≤–æ–¥ –ª–æ–≥–∏–Ω–∞
            paswd = self.find_element(login_locators.LOCATOR_PASWD) # –ø–∞—Ä–æ–ª—å
            paswd.send_keys(prm.password) # –≤–≤–æ–¥ –ø–∞—Ä–æ–ª—è
            self.find_element(login_locators.LOCATOR_ENTER).click() # –∫–Ω–æ–ø–∫–∞ "–í–æ–π—Ç–∏"
            start_auth_1 = time.time() # –Ω–∞—á–∞–ª–æ –æ—Ç—Å—á–µ—Ç–∞
            self.find_element_pb()  # –ø—Ä–æ–≥—Ä–µ—Å—Å–±–∞—Ä
            end_auth_1 = time.time() # –∫–æ–Ω–µ—Ü –æ—Ç—Å—á–µ—Ç–∞
            full_auth_1 = end_auth_1 - start_auth_1 # –ø–æ–ª–Ω–æ–µ –≤—Ä–µ–º—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            if full_auth_1 <= 2: # —É—Å–ª–æ–≤–∏–µ
                print('    ‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: ', round(full_auth_1, 2), '—Å')
            else:
                print('    ‚ö†Ô∏è –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: ', round(full_auth_1, 2), '—Å', '(> 2 —Å)')
            time.sleep(1) # –æ–∂–∏–¥–∞–Ω–∏–µ
            self.find_element(login_locators.LOCATOR_LPU_1).click() # –æ—Ç–∫—Ä—ã—Ç—å –≤–∫–ª–∞–¥–∫—É –õ–ü–£
            self.find_element(login_locators.LOCATOR_LPU_2).click() # –≤—ã–±–æ—Ä –õ–ü–£
            self.find_element_pb()  # –ø—Ä–æ–≥—Ä–µ—Å—Å–±–∞—Ä
            self.find_element(login_locators.LOCATOR_ENTERLPU).click() # –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
            start_auth_2 = time.time() # –Ω–∞—á–∞–ª–æ –æ—Ç—Å—á–µ—Ç–∞
            self.find_element_pb()  # –ø—Ä–æ–≥—Ä–µ—Å—Å–±–∞—Ä
            end_auth_2 = time.time() # –Ω–∞—á–∞–ª–æ –æ—Ç—Å—á–µ—Ç–∞
            full_auth_2 = end_auth_2 - start_auth_2 # –ø–æ–ª–Ω–æ–µ –≤—Ä–µ–º—è –≤—ã–±–æ—Ä–∞ –õ–ü–£
            if full_auth_2 <= 5: # —É—Å–ª–æ–≤–∏–µ
                print('    ‚úÖ –í—ã–±–æ—Ä –õ–ü–£: ', round(full_auth_2, 2), '—Å')
            else:
                print('    ‚ö†Ô∏è –í—ã–±–æ—Ä –õ–ü–£: ', round(full_auth_2, 2), '—Å', '(> 5 —Å)')
            full_auth = full_auth_1 + full_auth_2 # –ø–æ–ª–Ω–æ–µ –≤—Ä–µ–º—è –º–æ–¥—É–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            print('    üèÅ –û–±—â–µ–µ –≤—Ä–µ–º—è –º–æ–¥—É–ª—è: ', round(full_auth, 2), '—Å') # –≤—ã–≤–æ–¥ –ø–æ–ª–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –º–æ–¥—É–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        except Exception as error:
            self.get_screenshots('Results/Results_sc/–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è_–ü—Ä–∏–º–æ—Ä—å—è.png')
            print('    ‚ùóÔ∏è –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –≤ –º–æ–¥—É–ª–µ - "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è":', (str(error)[:100]))
            self.driver.quit()
